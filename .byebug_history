c
client.describe_spot_price_history(params)
s
n
params_array.count
params_array
n
availability_zones
n
s
c
slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value.split(',')
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(',')
n
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(',')
slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value.split(',')
n
s
c
n
client.region
availability_zones
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(',')
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(','),
slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value.split(',')
c
@ec2_clients
n
s
ec2_clients
n
@zones
n
s
n
s
n
s
exit
client_master
master_client
spot_price_history_params(availability_zones_for_client(client))
spot_price_history_params(availability_zones_for_client(client)))
c
n
availability_zone
n
availability_zone
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value
slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value.split(',')
c
exit
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(',')
[slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value]
c
n
s
n
s
n
s
exit
az
n
region
n
availability_zones.map(&:zone_name)
client
region
s
@ec2_clients
n
@ec2_clients
s
n
s
exit
ec2_clients.first
ec2_clients
@ec2_clients['us-west-2'].describe_regions.regions.map(&:region_name)
@ec2_clients['us-west-2'].describe_regions.regions
@ec2_clients['us-west-2'].describe_regions.regions.class
@ec2_clients['us-west-2'].describe_regions.regions.map(&:region_names)
@ec2_clients['us-west-2'].describe_regions.regions.count
@ec2_clients['us-west-2'].describe_regions.count
@ec2_clients['us-west-2'].describe_regions.first
@ec2_clients['us-west-2'].describe_regions.map(&:region_name)
@ec2_clients['us-west-2'].describe_regions
ap @ec2_clients['us-west-2'].describe_regions
ap @ec2_clients['us-west-2'].instance_methods
ap @ec2_clients['us-west-2'].class
ap @ec2_clients['us-west-2'].regions
ap @ec2_clients
require 'awesome_print'
pp @ec2_clients
@ec2_clients
n
@ec2_clients
n
s
n
s
exit
s
ec2_clients
ec2_clients.first
master_client
client_master
@ec2_clients[region] ||= {client: Aws::EC2::Client.new(region: region, credentials: creds),availability_zones: availability_zones.select { |zone| zone if zone =~ region }  }
@ec2_clients
n
s
n
s
n
s
n
s
ec2_clients.values
az
n
s
n
s
n
spot_prices
n
ec2_clients
s
n
s
exit
ec2_clients
@ec2_clients
s
n
block_given?
args
n
s
spot_request_params
exit
n
s
n
s
n
spot_prices
@ec2_clients
n
s
n
s
exit
regions
clients
{}.tap { regions.each { |region| clients[region] = Aws::EC2::Client.new(region: region, credentials: creds) if @ec2_clients[region].nil? } }
clients
{}.tap { |clients| regions.each { |region| clients[region] = Aws::EC2::Client.new(region: region, credentials: creds) if @ec2_clients[region].nil? } }
clients = {}
clients
{}.tap { |clients| regions.each { |region| clients[region] = Aws::EC2::Client.new(region: region, credentials: creds) if @ec2_clients[region].nil? } }
clients
{}.tap { |clients| regions.each { |region| clients[region] = Aws::EC2::Client.new(region: region, credentials: creds) if @ec2_clients[region].nil? } }
@ec2_clients
{}.tap { regions.each { |region| @ec2_clients[region] = Aws::EC2::Client.new(region: region, credentials: creds) if @ec2_clients[region].nil? } }
regions
@ec2_clients = {}
regions
{}.tap { regions.each { |region| @ec2_clients[region] ||= Aws::EC2::Client.new(region: region, credentials: creds) } }
n
s
n
s
exit
ec2_clients
n
s
n
s
n
s
n
s
n
s
n
s
n
s
n
s
exit
slave_image_tags
slave_image_tags.select{ |t| t.key.eql? 'product_descriptions' }.first.value.split(',')
[slave_image_tags.select { |t| t.key.eql? 'instance_types' }.first.value]
slave_image_tags
n
s
;n
n
s
exit-program
availability_zones.flatten.count
availability_zones.flatten
availability_zones.float
availability_zones
az
slave_image_tags
n
s
n
s
n
ec2_master.instance_methods
ec2_master.methods
ec2_master.guid
ec2_master.instance_id
ec2_master.id
s
n
s
n
s
exit
slave_image_tags.map(&:key)
slave_image_tags.select { |t| t.key.eql? 'instance_types'}
slave_image_tags.select { |t| t.key.eql? 'instance_types'}.first.value
slave_image_tags
n
s
availability_zones
n
s
slave_image
n
s
n
s
slave_image_tags
n
s
ec2_clients['us-west-2']
ec2_clients
n
s
n
image
n
s
ec2_clients
s
n
s
n
s
